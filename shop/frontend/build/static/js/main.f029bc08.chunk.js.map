{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","actions/userActions.js","constants/orderConstants.js","components/Header.js","components/Footer.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","components/Meta.js","screens/HomeScreen.js","components/Rating.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Nav","Link","id","class","Container","to","Toggle","aria-controls","Collapse","className","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Product","Card","_id","Img","src","image","Body","Title","as","Text","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","color","Paginate","keyword","Pagination","Array","keys","key","active","ProductCarousel","useEffect","a","axios","get","data","response","message","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","pageNumber","listProducts","sm","md","lg","xl","Rating","value","text","ProductScreen","history","useState","qty","setQty","rating","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","numReviews","countInStock","Form","Control","onChange","e","target","Button","push","disabled","length","review","createdAt","substring","onSubmit","productId","preventDefault","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f029bc08.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n\n} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n","import {\n\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n","import axios from 'axios'\nimport {\n\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n\n\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect >\n        <Nav.Link>\n          <Nav.Link href=\"../about.html\">\n            <a id=\"home\">  <i class=\"fa fa-rocket\"> </i> HOME</a>\n          </Nav.Link>\n\n        </Nav.Link>\n\n\n        <Container>\n          <LinkContainer to='/'>\n            <h6><a class=\"navbar-brand\" href=\"#\"  > SpaceShop </a></h6>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-basket'>  </i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  {/* <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer> */}\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                  <LinkContainer to='/login'>\n                    <Nav.Link>\n                      <i className='fas fa-address-card fa-1x'> </i> Sign In\n                    </Nav.Link>\n                  </LinkContainer>\n                )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'><p> SpaceShop 2021 </p></Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='shadow-lg p-3 mb-5 bg- rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n\n        <Card.Text as='h3'>EUR{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '40px',\n        height: '40px',\n        margin: 'auto',\n        display: 'block',\n        color: 'purple'\n      }}\n    >\n      <span className='sr-only'>Warming up...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n        <Carousel pause='hover' className='carousel slide carousel-fade'>\n          {products.map((product) => (\n            <Carousel.Item key={product._id}>\n              <Link to={`/product/${product._id}`}>\n                <Image src={product.image} alt={product.name} fluid />\n                <Carousel.Caption className='carousel-caption'>\n                  <h2>\n                    {product.name} EUR  {product.price}\n                  </h2>\n                </Carousel.Caption>\n              </Link>\n            </Carousel.Item>\n          ))}\n        </Carousel>\n      )\n}\n\nexport default ProductCarousel\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome To SpaceShop',\n  description: 'We sell the best products to good prices',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n          <Link to='/' className='btn btn-light'>\n            Back\n          </Link>\n        )}\n      <h4 className='text-center py-3'>SolarSystem collection </h4>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n            <>\n              <Row>\n                {products.map((product) => (\n                  <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product} />\n                  </Col>\n                ))}\n              </Row>\n              <Paginate\n                pages={pages}\n                page={page}\n                keyword={keyword ? keyword : ''}\n              />\n            </>\n          )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n                ? 'fas fa-star-half-alt'\n                : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n                ? 'fas fa-star-half-alt'\n                : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n                ? 'fas fa-star-half-alt'\n                : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n                ? 'fas fa-star-half-alt'\n                : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n                ? 'fas fa-star-half-alt'\n                : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#7f5bc3',\n}\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n    listProductDetails,\n    createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState(0)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\n    const {\n        success: successProductReview,\n        loading: loadingProductReview,\n        error: errorProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n        }\n        if (!product._id || product._id !== match.params.id) {\n            dispatch(listProductDetails(match.params.id))\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(\n            createProductReview(match.params.id, {\n                rating,\n                comment,\n            })\n        )\n    }\n\n    return (\n        <>\n            <Link className='btn btn-light my-3' to='/'>\n                Go Back\n      </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                        <>\n                            <Meta title={product.name} />\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n                                <Col md={3}>\n                                    <ListGroup variant='flush'>\n                                        <ListGroup.Item>\n                                            <h3 className='text-center py-3'>{product.name}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <Rating\n                                                value={product.rating}\n                                                text={`${product.numReviews} reviews`}\n                                            />\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>Price: EUR{product.price}</ListGroup.Item>\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>EUR{product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col>\n                                                            <Form.Control\n                                                                as='select'\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {[...Array(product.countInStock).keys()].map(\n                                                                    (x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    )\n                                                                )}\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    type='button'\n                                                    disabled={product.countInStock === 0}\n                                                >\n                                                    Add To Cart\n                    </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={6}>\n                                    <h5>Reviews</h5>\n                                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n                                        <ListGroup.Item>\n                                            <h5>Write a Customer Review</h5>\n                                            {successProductReview && (\n                                                <Message variant='success'>\n                                                    Review submitted successfully\n                                                </Message>\n                                            )}\n                                            {loadingProductReview && <Loader />}\n                                            {errorProductReview && (\n                                                <Message variant='danger'>{errorProductReview}</Message>\n                                            )}\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Comment</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='3'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                      </Button>\n                                                </Form>\n                                            ) : (\n                                                    <Message>\n                                                        Please <Link to='/login'>sign in</Link> to write a review{' '}\n                                                    </Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </>\n                    )}\n        </>\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n            <ListGroup variant='flush'>\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>EUR{item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control\n                        as='select'\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={2}>\n                      <Button\n                        type='button'\n                        variant='light'\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              EUR\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}